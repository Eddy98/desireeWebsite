{"ast":null,"code":"var _jsxFileName = \"/Users/eduardo/websites/desiree/client/src/ApolloProvider.js\";\nimport React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nlet port = process.env.PORT || 5000;\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: 'http://localhost:5000/'\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/Users/eduardo/websites/desiree/client/src/ApolloProvider.js"],"names":["React","App","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","setContext","port","process","env","PORT","cache","link","HttpLink","uri","client","authLink","concat","httpLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AAEA,MAAMC,KAAK,GAAG,IAAIR,aAAJ,EAAd;AAEA,MAAMS,IAAI,GAAG,IAAIC,QAAJ,CAAa;AACxBC,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9BU,EAAAA,IAAI,EAAEI,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,CADwB;AAE9BP,EAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFuB,CAAjB,CAAf;AAMA,eACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF","sourcesContent":["import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nlet port = process.env.PORT || 5000;\n\nconst cache = new InMemoryCache();\n\nconst link = new HttpLink({\n  uri: 'http://localhost:5000/'\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}